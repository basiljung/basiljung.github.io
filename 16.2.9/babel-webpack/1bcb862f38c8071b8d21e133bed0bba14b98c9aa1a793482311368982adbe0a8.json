{"ast":null,"code":"import { Subject, takeUntil } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/football-stats.service\";\nimport * as i2 from \"@angular/common\";\nfunction StandingsComponent_tr_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵelement(4, \"img\", 1);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const item_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate4(\" \", item_r1.dt_txt, \": \", item_r1.weather[0].description, \" - High: \", item_r1.main.temp_max, \" - Low: \", item_r1.main.temp_min, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"src\", \"https://openweathermap.org/img/wn/\" + item_r1.weather[0].icon + \"@2x.png\", i0.ɵɵsanitizeUrl);\n  }\n}\nexport class StandingsComponent {\n  constructor(footballStatsService) {\n    this.footballStatsService = footballStatsService;\n    this.currentYear = new Date();\n    this.standingData = new Array();\n    this.destroy$ = new Subject();\n  }\n  ngOnInit() {\n    /*\n    england: 39\n    spain: 140\n    germany: 78\n    italy: 135\n    France: 61\n    */\n    if (localStorage.getItem('39')) {\n      this.standingData = JSON.parse(localStorage.getItem('39'))[0];\n    } else {\n      this.footballStatsService.getLeagueStandings(39, this.currentYear.getFullYear()).pipe(takeUntil(this.destroy$)).subscribe(res => {\n        this.standingData = res.response[0].league.standings;\n        localStorage.setItem('39', JSON.stringify(this.standingData));\n      });\n    }\n  }\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n  static #_ = this.ɵfac = function StandingsComponent_Factory(t) {\n    return new (t || StandingsComponent)(i0.ɵɵdirectiveInject(i1.FootballStatsService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: StandingsComponent,\n    selectors: [[\"app-standings\"]],\n    decls: 4,\n    vars: 1,\n    consts: [[4, \"ngFor\", \"ngForOf\"], [\"alt\", \"no image\", 3, \"src\"]],\n    template: function StandingsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \"standings works!\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"table\");\n        i0.ɵɵtemplate(3, StandingsComponent_tr_3_Template, 5, 5, \"tr\", 0);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.weatherForecastData);\n      }\n    },\n    dependencies: [i2.NgForOf],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["Subject","takeUntil","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵadvance","ɵɵtextInterpolate4","item_r1","dt_txt","weather","description","main","temp_max","temp_min","ɵɵproperty","icon","ɵɵsanitizeUrl","StandingsComponent","constructor","footballStatsService","currentYear","Date","standingData","Array","destroy$","ngOnInit","localStorage","getItem","JSON","parse","getLeagueStandings","getFullYear","pipe","subscribe","res","response","league","standings","setItem","stringify","ngOnDestroy","next","complete","_","ɵɵdirectiveInject","i1","FootballStatsService","_2","selectors","decls","vars","consts","template","StandingsComponent_Template","rf","ctx","ɵɵtemplate","StandingsComponent_tr_3_Template","weatherForecastData"],"sources":["/Users/basil/Software_Projects/test_Angular_Cert/ng-cert-football-update-basil/basiljung.github.io/football-update-app/src/app/features/standings/standings.component.ts","/Users/basil/Software_Projects/test_Angular_Cert/ng-cert-football-update-basil/basiljung.github.io/football-update-app/src/app/features/standings/standings.component.html"],"sourcesContent":["import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Subject, takeUntil } from 'rxjs';\nimport { Standing } from 'src/app/models/standing.model';\nimport { FootballStatsService } from 'src/app/services/football-stats.service';\n\n@Component({\n  selector: 'app-standings',\n  templateUrl: './standings.component.html',\n  styleUrls: ['./standings.component.css'],\n})\nexport class StandingsComponent implements OnInit, OnDestroy {\n  currentYear = new Date();\n  standingData = new Array<Standing[]>();\n  private readonly destroy$ = new Subject<void>();\n\n  constructor(private readonly footballStatsService: FootballStatsService) {}\n\n  ngOnInit(): void {\n    /*\n  england: 39\n  spain: 140\n  germany: 78\n  italy: 135\n  France: 61\n  */\n\n    if (localStorage.getItem('39')) {\n      this.standingData = JSON.parse(localStorage.getItem('39') as string)[0];\n    } else {\n      this.footballStatsService\n        .getLeagueStandings(39, this.currentYear.getFullYear())\n        .pipe(takeUntil(this.destroy$))\n        .subscribe((res) => {\n          this.standingData = res.response[0].league.standings;\n          localStorage.setItem('39', JSON.stringify(this.standingData));\n        });\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","<p>standings works!</p>\n\n<table >\n  <tr *ngFor=\"let item of weatherForecastData\">\n    <td>\n      {{ item.dt_txt }}: {{ item.weather[0].description }} - High:\n      {{ item.main.temp_max }} - Low: {{ item.main.temp_min }}\n    </td>\n    <td>\n      <img\n        [src]=\"\n          'https://openweathermap.org/img/wn/' +\n          item.weather[0].icon +\n          '@2x.png'\n        \"\n        alt=\"no image\"\n      />\n    </td>\n  </tr>\n\n</table>\n"],"mappings":"AACA,SAASA,OAAO,EAAEC,SAAS,QAAQ,MAAM;;;;;;ICEvCC,EAAA,CAAAC,cAAA,SAA6C;IAEzCD,EAAA,CAAAE,MAAA,GAEF;IAAAF,EAAA,CAAAG,YAAA,EAAK;IACLH,EAAA,CAAAC,cAAA,SAAI;IACFD,EAAA,CAAAI,SAAA,aAOE;IACJJ,EAAA,CAAAG,YAAA,EAAK;;;;IAZHH,EAAA,CAAAK,SAAA,GAEF;IAFEL,EAAA,CAAAM,kBAAA,MAAAC,OAAA,CAAAC,MAAA,QAAAD,OAAA,CAAAE,OAAA,IAAAC,WAAA,eAAAH,OAAA,CAAAI,IAAA,CAAAC,QAAA,cAAAL,OAAA,CAAAI,IAAA,CAAAE,QAAA,MAEF;IAGIb,EAAA,CAAAK,SAAA,GAIC;IAJDL,EAAA,CAAAc,UAAA,+CAAAP,OAAA,CAAAE,OAAA,IAAAM,IAAA,cAAAf,EAAA,CAAAgB,aAAA,CAIC;;;ADJT,OAAM,MAAOC,kBAAkB;EAK7BC,YAA6BC,oBAA0C;IAA1C,KAAAA,oBAAoB,GAApBA,oBAAoB;IAJjD,KAAAC,WAAW,GAAG,IAAIC,IAAI,EAAE;IACxB,KAAAC,YAAY,GAAG,IAAIC,KAAK,EAAc;IACrB,KAAAC,QAAQ,GAAG,IAAI1B,OAAO,EAAQ;EAE2B;EAE1E2B,QAAQA,CAAA;IACN;;;;;;;IAQA,IAAIC,YAAY,CAACC,OAAO,CAAC,IAAI,CAAC,EAAE;MAC9B,IAAI,CAACL,YAAY,GAAGM,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,IAAI,CAAW,CAAC,CAAC,CAAC,CAAC;KACxE,MAAM;MACL,IAAI,CAACR,oBAAoB,CACtBW,kBAAkB,CAAC,EAAE,EAAE,IAAI,CAACV,WAAW,CAACW,WAAW,EAAE,CAAC,CACtDC,IAAI,CAACjC,SAAS,CAAC,IAAI,CAACyB,QAAQ,CAAC,CAAC,CAC9BS,SAAS,CAAEC,GAAG,IAAI;QACjB,IAAI,CAACZ,YAAY,GAAGY,GAAG,CAACC,QAAQ,CAAC,CAAC,CAAC,CAACC,MAAM,CAACC,SAAS;QACpDX,YAAY,CAACY,OAAO,CAAC,IAAI,EAAEV,IAAI,CAACW,SAAS,CAAC,IAAI,CAACjB,YAAY,CAAC,CAAC;MAC/D,CAAC,CAAC;;EAER;EAEAkB,WAAWA,CAAA;IACT,IAAI,CAAChB,QAAQ,CAACiB,IAAI,EAAE;IACpB,IAAI,CAACjB,QAAQ,CAACkB,QAAQ,EAAE;EAC1B;EAAC,QAAAC,CAAA,G;qBAhCU1B,kBAAkB,EAAAjB,EAAA,CAAA4C,iBAAA,CAAAC,EAAA,CAAAC,oBAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAlB9B,kBAAkB;IAAA+B,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,4BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCV/BtD,EAAA,CAAAC,cAAA,QAAG;QAAAD,EAAA,CAAAE,MAAA,uBAAgB;QAAAF,EAAA,CAAAG,YAAA,EAAI;QAEvBH,EAAA,CAAAC,cAAA,YAAQ;QACND,EAAA,CAAAwD,UAAA,IAAAC,gCAAA,gBAeK;QAEPzD,EAAA,CAAAG,YAAA,EAAQ;;;QAjBeH,EAAA,CAAAK,SAAA,GAAsB;QAAtBL,EAAA,CAAAc,UAAA,YAAAyC,GAAA,CAAAG,mBAAA,CAAsB"},"metadata":{},"sourceType":"module","externalDependencies":[]}